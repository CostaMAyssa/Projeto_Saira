// üß™ SCRIPT PARA TESTAR WEBSOCKET EVOLUTION API
// Execute: node test_websocket.js

const { io } = require('socket.io-client');

const API_URL = 'https://evoapi.insignemarketing.com.br';
const API_KEY = '33cf7bf9876391ff485115742bdb149a';

console.log('üîå Testando conex√£o WebSocket Evolution API...');
console.log(`üì° URL: ${API_URL}`);
console.log(`üîë API Key: ${API_KEY.substring(0, 10)}...`);

// Conectar no modo global
const socket = io(API_URL, {
  transports: ['websocket'],
  query: {
    apikey: API_KEY
  },
  reconnection: true,
  reconnectionAttempts: 5,
  reconnectionDelay: 1000,
  timeout: 10000
});

socket.on('connect', () => {
  console.log('‚úÖ WebSocket conectado com sucesso!');
  console.log('üÜî Socket ID:', socket.id);
});

socket.on('disconnect', (reason) => {
  console.log('‚ùå WebSocket desconectado:', reason);
});

socket.on('connect_error', (error) => {
  console.error('‚ùå Erro de conex√£o:', error.message);
});

// Eventos da Evolution API
socket.on('APPLICATION_STARTUP', (data) => {
  console.log('üöÄ APPLICATION_STARTUP:', data);
});

socket.on('QRCODE_UPDATED', (data) => {
  console.log('üì± QRCODE_UPDATED:', data);
});

socket.on('CONNECTION_UPDATE', (data) => {
  console.log('üîó CONNECTION_UPDATE:', data);
});

socket.on('MESSAGES_UPSERT', (data) => {
  console.log('üì® MESSAGES_UPSERT:', data);
});

socket.on('MESSAGES_UPDATE', (data) => {
  console.log('üîÑ MESSAGES_UPDATE:', data);
});

socket.on('CONTACTS_UPSERT', (data) => {
  console.log('üë§ CONTACTS_UPSERT:', data);
});

socket.on('CHATS_UPSERT', (data) => {
  console.log('üí¨ CHATS_UPSERT:', data);
});

// Timeout para teste
setTimeout(() => {
  if (socket.connected) {
    console.log('‚úÖ Teste conclu√≠do - WebSocket est√° funcionando!');
  } else {
    console.log('‚ùå Teste falhou - WebSocket n√£o conectou');
  }
  process.exit(0);
}, 15000);

console.log('‚è≥ Aguardando conex√£o por 15 segundos...'); 