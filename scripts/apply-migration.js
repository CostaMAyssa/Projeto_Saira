import { createClient } from '@supabase/supabase-js';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Para obter __dirname em ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Configura√ß√µes do Supabase (mesmas do projeto)
const supabaseUrl = 'https://supapainel.insignemarketing.com.br';
const serviceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJyb2xlIjogInNlcnZpY2Vfcm9sZSIsCiAgImlzcyI6ICJzdXBhYmFzZSIsCiAgImlhdCI6IDE3MTUwNTA4MDAsCiAgImV4cCI6IDE4NzI4MTcyMDAKfQ.ek3IR6aUgUyvile2qJGvt3KcAwrtoX12MXOS5NUaA_c';

// Cliente administrativo
const supabase = createClient(supabaseUrl, serviceKey, {
  auth: {
    persistSession: false,
    autoRefreshToken: false,
  }
});

async function applyMigration(migrationFile) {
  try {
    console.log(`\nüöÄ Aplicando migra√ß√£o: ${migrationFile}`);
    
    // Ler o arquivo de migra√ß√£o
    const migrationPath = path.join(__dirname, '..', 'supabase', 'migrations', migrationFile);
    
    if (!fs.existsSync(migrationPath)) {
      throw new Error(`Arquivo de migra√ß√£o n√£o encontrado: ${migrationPath}`);
    }
    
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');
    
    console.log('üìÑ Conte√∫do da migra√ß√£o:');
    console.log('‚îÄ'.repeat(50));
    console.log(migrationSQL);
    console.log('‚îÄ'.repeat(50));
    
    // Como n√£o podemos executar SQL diretamente via cliente JavaScript,
    // vamos mostrar as instru√ß√µes para execu√ß√£o manual
    console.log('\nüìã Execute o seguinte SQL no dashboard do Supabase:');
    console.log('üåê Acesse: https://supabase.com/dashboard/project/[seu-projeto]/sql');
    console.log('\n' + '='.repeat(60));
    console.log(migrationSQL);
    console.log('='.repeat(60));
    console.log('\n‚úÖ Copie e cole o SQL acima no SQL Editor do Supabase e execute.');
    
  } catch (error) {
    console.error('‚ùå Erro ao ler migra√ß√£o:', error.message);
  }
}

// Fun√ß√£o principal
async function main() {
  const migrationFile = process.argv[2];
  
  if (!migrationFile) {
    console.log('‚ùå Por favor, especifique o arquivo de migra√ß√£o.');
    console.log('üìñ Uso: node scripts/apply-migration.js <nome-do-arquivo.sql>');
    console.log('üìñ Exemplo: node scripts/apply-migration.js 20240320000003_enable_uuid_extension.sql');
    return;
  }
  
  console.log('üîß Preparando migra√ß√£o...');
  console.log(`üåê URL: ${supabaseUrl}`);
  
  await applyMigration(migrationFile);
}

// Executar se chamado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  main().catch(console.error);
}

export { applyMigration }; 